<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!-- 自动扫描与装配bean -->
    <!--<context:component-scan base-package="com.zgc"></context:component-scan>-->
    <context:component-scan base-package="com.zgc" />
    <!-- 加载jdbc配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!-- dbcp配置 -->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"-->
          <!--destroy-method="close">-->
        <!--&lt;!&ndash; 指定连接数据库的驱动 &ndash;&gt;-->
        <!--<property name="driverClass" value="${jdbc_driverClassName}"/>-->
        <!--&lt;!&ndash; 指定连接数据库的URL &ndash;&gt;-->
        <!--<property name="jdbcUrl" value="${jdbc_url}"/>-->
        <!--&lt;!&ndash; 指定连接数据库的用户名 &ndash;&gt;-->
        <!--<property name="user" value="${jdbc_username}"/>-->
        <!--&lt;!&ndash; 指定连接数据库的密码 &ndash;&gt;-->
        <!--<property name="password" value="${jdbc_password}"/>-->
        <!--&lt;!&ndash; 指定连接数据库连接池的最大连接数 &ndash;&gt;-->
        <!--<property name="maxPoolSize" value="40"/>-->
        <!--&lt;!&ndash; 指定连接数据库连接池的最小连接数 &ndash;&gt;-->
        <!--<property name="minPoolSize" value="1"/>-->
        <!--&lt;!&ndash; 指定连接数据库连接池的初始化连接数 &ndash;&gt;-->
        <!--<property name="initialPoolSize" value="1"/>-->
        <!--&lt;!&ndash; 指定连接数据库连接池的连接最大空闲时间,改时间段内不对数据库做任何操作，既断开链接 &ndash;&gt;-->
        <!--<property name="maxIdleTime" value="20"/>-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc_driverClassName}"/>
        <property name="url" value="${jdbc_url}" />
        <property name="username" value="${jdbc_username}" />
        <property name="password" value="${jdbc_password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <!--扫描hibernate的实体的路径-->
                <value>com.zgc.model</value>
                <!--<value>com.bimatrix.revit.shiro</value>-->
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <!--配置Hibernate的方言-->
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQLDialect
                </prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <!--格式化输出sql语句-->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">false</prop>
            </props>
        </property>
    </bean>

    <!-- 用注解来实现事务管理 -->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <tx:annotation-driven transaction-manager="txManager"/>

</beans>